version: 2.1

orbs:
  jira: circleci/jira@1.3.1

executors:
  poetry_python_3-7:
    docker:
      - image: leddzip/python-poetry:py3.7-po1.1.11
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  poetry_python_3-8:
    docker:
      - image: leddzip/python-poetry:py3.8-po1.1.11
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  poetry_python_3-9:
    docker:
      - image: leddzip/python-poetry:py3.9-po1.1.11
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  poetry_python_3-10:
    docker:
      - image: leddzip/python-poetry:py3.10-po1.1.11
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  standart-bash:
    docker:
      - image: bash:5.1.8
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  git:
    docker:
      - image: leddzip/ubuntu-git:20.04
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  qodana:
    docker:
      - image: jetbrains/qodana-python
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD


docker_context: &docker_context
  context:
    - Leddzip Dockerhub

docker_and_artifactory_context: &docker_and_artifactory_context
  context:
    - Leddzip Dockerhub
    - Leddzip Python Artifactory

master_filter: &master_filter
  filters:
    branches:
      only: master

no_tag_filter: &no_tag_filter
  filters:
    branches:
      only: /.*/
    tags:
      ignore: /.*/

release_tag_filter: &release_tag_filter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /release-v.*/


commands:
  test:
    steps:
      - run: |
          poetry install
          mkdir test-results
          poetry run coverage run -m pytest --junitxml=test-results/junit.xml
          poetry run coverage report -m
          poetry run coverage html
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: htmlcov

jobs:
  test-3-7:
    executor: poetry_python_3-7
    steps:
      - checkout
      - test
  test-3-8:
    executor: poetry_python_3-8
    steps:
      - checkout
      - test
  test-3-9:
    executor: poetry_python_3-9
    steps:
      - checkout
      - test
  test-3-10:
    executor: poetry_python_3-10
    steps:
      - checkout
      - test
  qodana-report:
    executor: qodana
    steps:
      - checkout
      - run: |
          /opt/idea/bin/entrypoint --save-report
      - store_artifacts:
          path: /data/results/report
  deploy:
    executor: poetry_python_3-7
    steps:
      - checkout
      - run: |
          poetry build --format wheel
          poetry config repositories.deaf-adder-pypi $MY_CIRCLECI_ARTIFACTORY_DEAF_ADDER_REPO
          poetry config http-basic.deaf-adder-pypi $MY_CIRCLECI_ARTIFACTORY_USERNAME $MY_CIRCLECI_ARTIFACTORY_PASSWORD
          poetry publish --repository deaf-adder-pypi
  check-version:
    executor: standart-bash
    steps:
      - checkout
      - run: bash ./build-scripts/check_version.sh
  handle-merge-commit:
    executor: git
    steps:
      - add_ssh_keys:
          fingerprints:
            - "d4:c1:89:ea:55:06:44:3d:88:62:b4:b7:99:5d:0a:75"
      - checkout
      - run: |
          ssh-add -D
          ssh-add ~/.ssh/id_rsa_d4c189ea5506443d8862b4b7995d0a75
          git config --global user.email "albert-bot@leddzip.com"
          git config --global user.name "Albert Bot"
          bash ./handle-release.sh "$(cat deafadder_container/__init__.py | grep "__version__" | grep -o -e "[0-9]*\.[0-9]*\.[0-9]*")"

workflows:
  "Test only pipeline":
    jobs:
      - test-3-7:
          <<: *docker_context
          <<: *no_tag_filter
      - test-3-8:
          <<: *docker_context
          <<: *no_tag_filter
      - test-3-9:
          <<: *docker_context
          <<: *no_tag_filter
      - test-3-10:
          <<: *docker_context
          <<: *no_tag_filter
      - qodana-report:
          <<: *docker_context
          <<: *no_tag_filter
          requires:
            - test-3-7
            - test-3-8
            - test-3-9
            - test-3-10
          post-steps:
            - jira/notify:
                environment_type: development
                job_type: build


  "Master pipeline":
    jobs:
      - test-3-7:
          <<: *docker_context
          <<: *master_filter
      - test-3-8:
          <<: *docker_context
          <<: *master_filter
      - test-3-9:
          <<: *docker_context
          <<: *master_filter
      - test-3-10:
          <<: *docker_context
          <<: *master_filter
      - check-version:
          <<: *docker_context
          <<: *master_filter
          requires:
            - test-3-7
            - test-3-8
            - test-3-9
            - test-3-10
      - qodana-report:
          <<: *docker_context
          <<: *master_filter
          requires:
            - test-3-7
            - test-3-8
            - test-3-9
            - test-3-10
      - handle-merge-commit:
          <<: *docker_context
          <<: *master_filter
          requires:
            - check-version
          post-steps:
            - jira/notify:
                environment_type: production
                job_type: build

  "Buid and deploy pipeline":
    jobs:
      - test-3-7:
          <<: *docker_context
          <<: *release_tag_filter
      - test-3-8:
          <<: *docker_context
          <<: *release_tag_filter
      - test-3-9:
          <<: *docker_context
          <<: *release_tag_filter
      - test-3-10:
          <<: *docker_context
          <<: *release_tag_filter
      - check-version:
          <<: *docker_context
          <<: *release_tag_filter
          requires:
            - test-3-7
            - test-3-8
            - test-3-9
            - test-3-10
      - qodana-report:
          <<: *docker_context
          <<: *release_tag_filter
          requires:
            - test-3-7
            - test-3-8
            - test-3-9
            - test-3-10
      - deploy:
          <<: *docker_and_artifactory_context
          <<: *release_tag_filter
          requires:
            - check-version
          post-steps:
            - jira/notify:
                environment_type: production
                job_type: deployment

