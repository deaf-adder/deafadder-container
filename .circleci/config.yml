version: 2.1

executors:
  poetry_python_3-7:
    docker:
      - image: leddzip/python-poetry:py3.7-po1.1.11
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  poetry_python_3-8:
    docker:
      - image: leddzip/python-poetry:py3.8-po1.1.11
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  poetry_python_3-9:
    docker:
      - image: leddzip/python-poetry:py3.9-po1.1.11
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  poetry_python_3-10:
    docker:
      - image: leddzip/python-poetry:py3.10-po1.1.11
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD
  standart-bash:
    docker:
      - image: bash:5.1.8
        auth:
          username: $MY_CIRCLECI_DOCKERHUB_USERNAME
          password: $MY_CIRCLECI_DOCKERHUB_PASSWORD


docker_context: &docker_context
  context:
    - Leddzip Dockerhub

docker_and_artifactory_context: &docker_and_artifactory_context
  context:
    - Leddzip Dockerhub
    - Leddzip Python Artifactory

develop_filter: &develop_filter
  filters:
    branches:
      only: develop

master_filter: &master_filter
  filters:
    branches:
      only: develop

no_tag_filter: &no_tag_filter
  filters:
    branches:
      only: /.*/
    tags:
      ignore: /.*/

release_tag_filter: &release_tag_filter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /release-v.*/


commands:
  test:
    steps:
      - run: |
          poetry install
          poetry run coverage run -m pytest
          poetry run coverage report




jobs:
  test-3-7:
    executor: poetry_python_3-7
    steps:
      - checkout
      - test
  test-3-8:
    executor: poetry_python_3-8
    steps:
      - checkout
      - test
  test-3-9:
    executor: poetry_python_3-9
    steps:
      - checkout
      - test
  test-3-10:
    executor: poetry_python_3-10
    steps:
      - checkout
      - test
  deploy:
    executor: poetry_python_3-7
    steps:
      - checkout
      - run: |
          poetry build --format wheel
          poetry config repositories.deaf-adder-pypi $MY_CIRCLECI_ARTIFACTORY_DEAF_ADDER_REPO
          poetry config http-basic.deaf-adder-pypi $MY_CIRCLECI_ARTIFACTORY_USERNAME $MY_CIRCLECI_ARTIFACTORY_PASSWORD
          poetry publish --repository deaf-adder-pypi
  check-version:
    executor: standart-bash
    steps:
      - checkout
      - run: bash ./build-scripts/check_version.sh


workflows:
  "Test pipeline":
    jobs:
      - test-3-7:
          <<: *docker_context
          <<: *no_tag_filter
      - test-3-8:
          <<: *docker_context
          <<: *no_tag_filter
      - test-3-9:
          <<: *docker_context
          <<: *no_tag_filter
      - test-3-10:
          <<: *docker_context
          <<: *no_tag_filter

  "Buid and deploy pipeline":
    jobs:
      - test-3-7:
          <<: *docker_context
          <<: *release_tag_filter
      - test-3-8:
          <<: *docker_context
          <<: *release_tag_filter
      - test-3-9:
          <<: *docker_context
          <<: *release_tag_filter
      - test-3-10:
          <<: *docker_context
          <<: *release_tag_filter
      - check-version:
          <<: *docker_context
          <<: *release_tag_filter
          requires:
            - test-3-7
            - test-3-8
            - test-3-9
            - test-3-10
      - deploy:
          <<: *docker_and_artifactory_context
          <<: *release_tag_filter
          requires:
            - check-version
